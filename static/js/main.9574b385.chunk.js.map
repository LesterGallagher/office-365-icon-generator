{"version":3,"sources":["components/Loader/Loader.module.css","components/Loading/Loading.module.css","config.js","flux-stores/GooglePlayStore.js","lib/polyfills.js","components/App/logo.svg","components/AppliedRoute/AppliedRoute.js","components/AsyncComponent/AsyncComponent.js","components/Routes/Routes.js","components/Loading/Loading.js","components/App/App.js","serviceWorker.js","index.js","components/Loader/Loader.js"],"names":["module","exports","pageLoader","loader","loading","apiUrl","GooglePlayStore","searchResults","doApplicationSearch","_callee","term","lang","query","response","regenerator_default","a","wrap","_context","prev","next","queryString","stringify","num","fetch","concat","sent","json","_this","emit","type","stop","fetchTopApps","_callee2","_context2","topApps","EventEmitter","__webpack_exports__","HTMLCanvasElement","prototype","toBlob","Object","defineProperty","value","callback","quality","dataURL","this","toDataURL","split","setTimeout","binStr","atob","len","length","arr","Uint8Array","i","charCodeAt","Blob","__webpack_require__","p","AppliedRoute","_ref","C","component","cProps","props","rest","objectWithoutProperties","react_default","createElement","react_router","assign","render","asyncComponent","importComponent","loadingComponent","arguments","undefined","_Component","AsyncComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","_componentDidMount","asyncToGenerator","mark","default","setState","apply","Component","Home","Promise","all","e","then","bind","AppIconGenerator","Routes","childProps","console","log","react_router_dom","exact","path","Loading","className","styles","Loader","App","isAuthenticated","userHasAuthenticated","user","components_Loading_Loading","components_Routes_Routes","Boolean","window","location","hostname","match","ons","platform","select","ReactDOM","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_5___default","cx","cy","r"],"mappings":"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","file":"static/js/main.9574b385.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageLoader\":\"Loader_pageLoader__2sPAI\",\"loader\":\"Loader_loader__2k4O4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__gYer2\"};","export const apiUrl = 'https://api.esstudio.site/api/google-play-store';","import { EventEmitter } from \"events\";\r\nimport queryString from 'query-string';\r\nimport { apiUrl } from '../config';\r\n\r\nclass GooglePlayStore extends EventEmitter {\r\n\r\n    searchResults = [];\r\n\r\n    doApplicationSearch = async (term, lang) => {\r\n        const num = 5;\r\n        const query = queryString.stringify({ term, lang, num });\r\n        // https://www.npmjs.com/package/google-play-scraper#search\r\n        const response = await fetch(`${apiUrl}/search?${query}`);\r\n        this.searchResults = await response.json();\r\n        this.emit('change', { type: 'APP_SEARCH_FULFILLED' });\r\n    } \r\n\r\n    fetchTopApps = async () => {\r\n        const num = 100;\r\n        const query = queryString.stringify({ num });\r\n        // https://www.npmjs.com/package/google-play-scraper#search\r\n        const response = await fetch(`${apiUrl}/list?${query}`);\r\n        this.topApps = await response.json();\r\n        this.emit('change', { type: 'FETCH_TOP_APPS_FULFILLED' });\r\n    }\r\n}\r\n\r\nexport default new GooglePlayStore();\r\n","if (!HTMLCanvasElement.prototype.toBlob) {\r\n    Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\r\n        value: function (callback, type, quality) {\r\n            var dataURL = this.toDataURL(type, quality).split(',')[1];\r\n            setTimeout(function () {\r\n\r\n                var binStr = atob(dataURL),\r\n                    len = binStr.length,\r\n                    arr = new Uint8Array(len);\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    arr[i] = binStr.charCodeAt(i);\r\n                }\r\n\r\n                callback(new Blob([arr], { type: type || 'image/png' }));\r\n\r\n            });\r\n        }\r\n    });\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default ({ component: C, props: cProps, ...rest }) =>\n  <Route {...rest} render={props => <C {...props} {...cProps} />} />;","// https://serverless-stack.com/chapters/code-splitting-in-create-react-app.html\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default function asyncComponent(importComponent, loadingComponent = null) {\r\n  class AsyncComponent extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        component: loadingComponent\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      const { default: component } = await importComponent();\r\n\r\n      this.setState({\r\n        component: component\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component;\r\n\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  }\r\n\r\n  return AsyncComponent;\r\n}","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport './Routes.css';\n\nimport Loader from '../Loader/Loader';\nimport AppliedRoute from \"../AppliedRoute/AppliedRoute\";\nimport UnauthenticatedRoute from '../UnauthenticatedRoute/UnauthenticatedRoute';\nimport AuthenticatedRoute from '../AuthenticatedRoute/AuthenticatedRoute';\nimport asyncComponent from '../AsyncComponent/AsyncComponent';\n\nconst Home = asyncComponent(() => import('../Home/Home'));\nconst AppIconGenerator = asyncComponent(() => import('../AppIconGenerator/AppIconGenerator'));\n\nclass Routes extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n        };\n\n    }\n\n    componentWillMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n        const { childProps } = this.props;\n        console.log(childProps);\n        return (\n            <HashRouter>\n                <Switch>\n                    {/* <UnauthenticatedRoute exact path=\"/login\" component={Introduction} props={childProps} /> */}\n                    {/* <UnauthenticatedRoute exact path=\"/no-entry\" component={NoEntry} props={childProps} /> */}\n\n                    {/* <AuthenticatedRoute exact path=\"/\" component={Home} props={childProps} /> */}\n                    {/* <AuthenticatedRoute exact path=\"/new-route\" component={NewRouteOrder} props={childProps} /> */}\n\n                    <AppliedRoute exact path=\"/\" component={Home} />\n                    <AppliedRoute exact path=\"/icon-generator\" component={AppIconGenerator} />\n                </Switch>\n            </HashRouter>\n        );\n    }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport styles from './Loading.module.css';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (<div className={styles.loading}>\r\n            <Loader />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\nimport { Button } from 'react-onsenui';\nimport logo from './logo.svg';\nimport './App.css';\nimport Routes from '../Routes/Routes';\nimport Loading from '../Loading/Loading'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: false,\n      userHasAuthenticated: true,\n      user: null\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div\n        >\n          <Loading />\n        </div>\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n          <Button>Test</Button>\n        </header> */}\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport './lib/polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ons from 'onsenui';\nimport './index.css';\nimport 'onsenui/css/onsenui.css';\nimport './onsen-css-theme/onsen-css-components.css'\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport GooglePlayStore from './flux-stores/GooglePlayStore';\n\nons.platform.select('android');\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","import React, { Component } from 'react';\r\nimport styles from './Loader.module.css';\r\n\r\nclass Loader extends Component {\r\n    render() {\r\n        return (\r\n            <svg {...this.props} className={styles.pageLoader}>\r\n                <circle cx=\"75\" cy=\"75\" r=\"20\"></circle>\r\n                <circle cx=\"75\" cy=\"75\" r=\"35\"></circle>\r\n                <circle cx=\"75\" cy=\"75\" r=\"50\"></circle>\r\n                <circle cx=\"75\" cy=\"75\" r=\"65\"></circle>\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;\r\n"],"sourceRoot":""}